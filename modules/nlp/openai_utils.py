from typing import Optional
from modules.core.logger import logger
from modules.core.openai_client import client
from modules.utils.cleaner import clean_output_text

# ‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ GPT
async def summarize_with_gpt(text: str) -> str:
    messages = [
        {
            "role": "system",
            "content": (
                "‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏™‡∏±‡πâ‡∏ô ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 3-4 ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ "
                "‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡∏û‡∏π‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á"
            )
        },
        {
            "role": "user",
            "content": f"‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢:\n{text}"
        }
    ]

    try:
        logger.info("üîÆ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢ GPT")
        response = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=messages,
            max_tokens=500,
            temperature=0.7
        )
        result = response.choices[0].message.content.strip()
        return clean_output_text(result)
    except Exception as e:
        logger.error(f"‚ùå ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢ GPT ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
        return "‚ö†Ô∏è ‡∏û‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏à‡πâ‡∏≤"

# ‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏û‡πà‡∏¢‡∏¥‡∏õ‡∏ã‡∏µ‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ GPT
async def summarize_tarot_reading(text: str, topic: str) -> str:
    messages = [
        {
            "role": "system",
            "content": (
                "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏°‡πà‡∏´‡∏°‡∏≠‡∏î‡∏π‡πÑ‡∏û‡πà‡∏¢‡∏¥‡∏õ‡∏ã‡∏µ ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡∏ï‡∏£‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô ‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏à "
                "‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡πÑ‡∏°‡πà‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô 4-5 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î "
                "‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ô‡∏±‡πâ‡∏ô ‡πÜ"
            )
        },
        {
            "role": "user",
            "content": (
                f"‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: {topic}\n\n"
                f"‡πÑ‡∏û‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢:\n{text}\n\n"
                "‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏ö‡∏ö‡∏Å‡∏•‡∏≤‡∏á ‡πÜ"
            )
        }
    ]

    try:
        logger.info(f"üîÆ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏û‡πà‡∏¢‡∏¥‡∏õ‡∏ã‡∏µ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: '{topic}' ‡∏î‡πâ‡∏ß‡∏¢ GPT")
        response = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=messages,
            max_tokens=500,
            temperature=0.6
        )
        result = response.choices[0].message.content.strip()
        return clean_output_text(result)
    except Exception as e:
        logger.error(f"‚ùå ‡∏™‡∏£‡∏∏‡∏õ‡∏Ñ‡∏≥‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÑ‡∏û‡πà‡∏¢‡∏¥‡∏õ‡∏ã‡∏µ‡∏î‡πâ‡∏ß‡∏¢ GPT ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
        return "‚ö†Ô∏è ‡πÅ‡∏°‡πà‡∏´‡∏°‡∏≠‡∏Ç‡∏≠‡∏û‡∏±‡∏Å‡πÅ‡∏õ‡πä‡∏ö‡∏ô‡∏∂‡∏á ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞‡∏•‡∏π‡∏Å"
